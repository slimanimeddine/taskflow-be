## Autogenerated by Scribe. DO NOT MODIFY.

name: Users
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/v1/workspaces/{workspaceId}/users'
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List Workspace Members'
      description: 'Retrieve a list of all users that are members of a specific workspace.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      workspaceId:
        name: workspaceId
        description: 'the id of the workspace'
        required: true
        example: 01972a18-9d62-72ff-8a2b-d55e57b34d1c
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      workspaceId: 01972a18-9d62-72ff-8a2b-d55e57b34d1c
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":"01977364-f701-713b-83a2-3828f66aaf80","name":"Morgan Hirthe","email":"dare.emelie@example.com","email_verified_at":"2025-06-15T11:41:25.000000Z","created_at":"2025-06-15T11:41:26.000000Z","updated_at":"2025-06-15T11:41:26.000000Z"},{"id":"01977364-f75c-70dc-b8aa-f45e3d7c029f","name":"Prof. Mina Bauch","email":"okeefe.isidro@example.org","email_verified_at":"2025-06-15T11:41:26.000000Z","created_at":"2025-06-15T11:41:26.000000Z","updated_at":"2025-06-15T11:41:26.000000Z"}]}'
        headers: []
        description: Success
        custom: []
      -
        status: 401
        content: |-
          {
                "message": "Unauthenticated",
          }
        headers: []
        description: Unauthenticated
        custom: []
      -
        status: 403
        content: |-
          {
                "message": "You are not authorized to view this workspace members.",
                "status": 403
          }
        headers: []
        description: Unauthorized
        custom: []
      -
        status: 404
        content: |-
          {
                "message": "Workspace not found",
                "status": 404
          }
        headers: []
        description: 'Not Found'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/users/me
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Authenticated User'
      description: 'Retrieve the currently authenticated user'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01977364-f786-7118-8d33-0088835731d0","name":"Morgan Hirthe","email":"imclaughlin@example.org","email_verified_at":"2025-06-15T11:41:26.000000Z","created_at":"2025-06-15T11:41:26.000000Z","updated_at":"2025-06-15T11:41:26.000000Z"}}'
        headers: []
        description: Success
        custom: []
      -
        status: 401
        content: |-
          {
               "message": "Unauthenticated"
          }
        headers: []
        description: Unauthenticated
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/v1/users/me
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete User'
      description: 'Deletes the authenticated user'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      password:
        name: password
        description: 'The password of the user attempting to delete their account. Must be at least 8 characters.'
        required: true
        example: password
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      password: password
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
               "message": "User deleted successfully",
              "status": 200
          }
        headers: []
        description: Success
        custom: []
      -
        status: 400
        content: |-
          {
               "message": "Incorrect password.",
               "status": 400
          }
        headers: []
        description: 'Incorrect password'
        custom: []
      -
        status: 401
        content: |-
          {
              "message": "Unauthenticated"
          }
        headers: []
        description: Unauthenticated
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
